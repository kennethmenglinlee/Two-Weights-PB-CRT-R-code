title = TeX(paste0("Relative Bias (%) ($K_{i-,1}=$",xi*Kmax,", $K_{i-,2}=$",Kmax,", $\\zeta=$",xi,")"))
) +
theme_bw() +
theme(legend.position = "none")
# width: 500, height: 350
ggsave(filename = paste0(getwd(),"/Submission 1/Figures/Appendix_A_4_2_Figure_1.tiff"), plot = last_plot(),
width=5, height=3.5, units="in",
dpi=800, device='tiff')
##### Extra Bias Plot 2
sim.df <- read.csv("results_1000sim_TRUEhettrtmnt_1CAC_OptimalICC_Scenario2_p1_0.05xi_1000Kmax.csv")
trtmnteffectL = 0.2
trtmnteffectH = 0.5 # 0.2, 0.5
# Kmax=200
Kmax=1000
# set randomization
P1 = 0.5
# set ratio size
# xi = 0.1
xi=0.05
cATE <- P1*trtmnteffectL + (1-P1)*trtmnteffectH
pATE <- (P1*Kmax*xi*trtmnteffectL + (1-P1)*Kmax*trtmnteffectH) / (P1*Kmax*xi + (1-P1)*Kmax)
# generate Bias (cATE)
bias_cate.df <- sim.df[grepl("est",colnames(sim.df))] - cATE
relbias_cate.df <- (bias_cate.df/cATE)*100
# generate Bias (pATE)
bias_pate.df <- sim.df[grepl("est",colnames(sim.df))] - pATE
relbias_pate.df <- (bias_pate.df/pATE)*100
results.relbias_cate <- colMeans(relbias_cate.df)
results.relbias_pate <- colMeans(relbias_pate.df)
library(ggplot2)
library(latex2exp)
# plot relative bias
rbind(
results.relbias_pate %>%
reshape2::melt() %>%
mutate(
analysis = sub("\\_.*", "", rownames(.)), # only keep analysis title (up to "_")
result = "Relative Bias (%)",
weighted = ifelse(grepl("w",analysis),"Weighted","Unweighted"),
estimand = "pATE"
)
,
results.relbias_cate %>%
reshape2::melt() %>%
mutate(
analysis = sub("\\_.*", "", rownames(.)), # only keep analysis title (up to "_")
result = "Relative Bias (%)",
weighted = ifelse(grepl("w",analysis),"Weighted","Unweighted"),
estimand = "cATE"
)
) %>%
# factor
mutate(
analysis = factor(analysis, levels=c("IEE","FE","EME","NEME","IEEw","FEw","EMEw","NEMEw")),
estimand = factor(estimand, levels=c("pATE","cATE"))
) %>%
# plot
ggplot(., aes(x=analysis, y=value, color=I("black"))) +
# ggplot(., aes(x=analysis, y=value, fill=analysis)) +
geom_bar(stat = "identity") +
facet_grid(estimand~weighted, scales="free") +
# geom_hline(data = data.frame(result = c("Relative Bias (%)","Relative Bias (%)", "RMSE"), hline = c(5, -5, NA)), aes(yintercept = hline), linetype = "dashed") +
geom_hline(yintercept = 5, linetype = "dashed") +
geom_hline(yintercept = -5, linetype = "dashed") +
# scale_fill_manual(values = rep(c("green4", "blue4", "purple3", "red2"),2) ) +
labs(y="Relative Bias (%)", x=NULL,
title = TeX(paste0("Relative Bias (%) ($K_{i-,1}=$",xi*Kmax,", $K_{i-,2}=$",Kmax,", $\\zeta=$",xi,")"))
) +
theme_bw() +
theme(legend.position = "none")
# width: 500, height: 350
ggsave(filename = paste0(getwd(),"/Submission 1/Figures/Appendix_A_4_2_Figure_2.tiff"), plot = last_plot(),
width=5, height=3.5, units="in",
dpi=800, device='tiff')
results.variance %>%
mutate(
analysis = sub("\\_.*", "", rownames(.)), # only keep analysis title (up to "_")
varianceestimator = sub(".+_(.+)","\\1", rownames(results.variance)),
# result = "Power",
weighted = ifelse(grepl("w",analysis),"Weighted","Unweighted")
) %>%
# filter(varianceestimator != "CR2") %>%
mutate(varianceestimator = ifelse(varianceestimator=="var", "Model", ifelse(varianceestimator=="jk", "Jackknife", ifelse(varianceestimator=="MC","Monte Carlo","BRL")))) %>%
filter(!(analysis %in% c("EME","NEME","EMEw","NEMEw"))) %>%
mutate(
varianceestimator = factor(varianceestimator, levels=c("Model","Jackknife","BRL","Monte Carlo")),
# analysis = factor(analysis, levels=c("IEE","FE","EME","NEME","IEEw","FEw","EMEw","NEMEw"))
analysis = factor(analysis, levels=c("IEE","FE","IEEw","FEw"))
) %>%
# plot
ggplot(., aes(x=analysis, y=value, fill=varianceestimator, color=varianceestimator)) +
geom_bar(position="dodge", stat = "identity") +
facet_grid(~weighted, scales="free_x") +
scale_fill_manual(values=c("gray","gray2","gray25","white")) +
scale_color_manual(values=c("black","black","black","black")) +
# scale_fill_manual(values = rep(c("green4", "blue4", "purple3", "red2"), each=2) ) +
labs(y="Variance", title = "Efficiency", x=NULL, fill="Variance Estimator", color="Variance Estimator") +
theme_bw() +
theme(legend.position = "bottom")
results.variance %>%
mutate(
analysis = sub("\\_.*", "", rownames(.)), # only keep analysis title (up to "_")
varianceestimator = sub(".+_(.+)","\\1", rownames(results.variance)),
# result = "Power",
weighted = ifelse(grepl("w",analysis),"Weighted","Unweighted")
) %>%
filter(varianceestimator != "CR2") %>%
mutate(varianceestimator = ifelse(varianceestimator=="var", "Model", ifelse(varianceestimator=="jk", "Jackknife", "Monte Carlo"))) %>%
mutate(
varianceestimator = factor(varianceestimator, levels=c("Model","Jackknife","Monte Carlo")),
analysis = factor(analysis, levels=c("IEE","FE","EME","NEME","IEEw","FEw","EMEw","NEMEw"))
) %>%
# plot
ggplot(., aes(x=analysis, y=value, fill=varianceestimator, color=varianceestimator)) +
geom_bar(position="dodge", stat = "identity") +
facet_grid(~weighted, scales="free_x") +
scale_fill_manual(values=c("gray","gray2","white")) +
scale_color_manual(values=c("black","black","black")) +
# scale_fill_manual(values = rep(c("green4", "blue4", "purple3", "red2"), each=2) ) +
labs(y="Variance", x=NULL, title="Efficiency", fill="Variance Estimator", color="Variance Estimator") +
theme_bw() +
theme(legend.position = "bottom")
# width: 500, height: 300
ggsave(filename = paste0(getwd(),"/Submission 1/Figures/Kenneth_Menglin_Lee_Figure_5.tiff"), plot = last_plot(),
width=5, height=3, units="in",
dpi=800, device='tiff')
results.variance %>%
mutate(
analysis = sub("\\_.*", "", rownames(.)), # only keep analysis title (up to "_")
varianceestimator = sub(".+_(.+)","\\1", rownames(results.variance)),
# result = "Power",
weighted = ifelse(grepl("w",analysis),"Weighted","Unweighted")
) %>%
filter(varianceestimator != "CR2") %>%
mutate(varianceestimator = ifelse(varianceestimator=="var", "Model", ifelse(varianceestimator=="jk", "Jackknife", "Monte Carlo"))) %>%
mutate(
varianceestimator = factor(varianceestimator, levels=c("Model","Jackknife","Monte Carlo")),
analysis = factor(analysis, levels=c("IEE","FE","EME","NEME","IEEw","FEw","EMEw","NEMEw"))
) %>%
# plot
ggplot(., aes(x=analysis, y=value, fill=varianceestimator, color=varianceestimator)) +
geom_bar(position="dodge", stat = "identity") +
facet_grid(~weighted, scales="free_x") +
scale_fill_manual(values=c("gray","gray2","white")) +
scale_color_manual(values=c("black","black","black")) +
# scale_fill_manual(values = rep(c("green4", "blue4", "purple3", "red2"), each=2) ) +
labs(y="Variance", x=NULL, title="Efficiency", fill="Variance Estimator", color="Variance Estimator") +
theme_bw() +
theme(legend.position = "bottom")
# plot CP
rbind(
results.CP_pate %>%
reshape2::melt() %>%
mutate(
analysis = sub("\\_.*", "", rownames(.)), # only keep analysis title (up to "_")
varianceestimator = sub(".+_(.+)","\\1", sub("\\_CP.*", "", names(results.CP))), # annoying but works
result = "CP",
weighted = ifelse(grepl("w",analysis),"Weighted","Unweighted"),
estimand = "pATE"
),
results.CP_cate %>%
reshape2::melt() %>%
mutate(
analysis = sub("\\_.*", "", rownames(.)), # only keep analysis title (up to "_")
varianceestimator = sub(".+_(.+)","\\1", sub("\\_CP.*", "", names(results.CP))), # annoying but works
result = "CP",
weighted = ifelse(grepl("w",analysis),"Weighted","Unweighted"),
estimand = "cATE"
)
) %>%
filter(varianceestimator != "CR2") %>% # remove CR2 variance estimators
mutate(varianceestimator = ifelse(varianceestimator=="mod","Model","Jackknife")) %>% # rename variance estimator levels
# factor
mutate(
analysis = factor(analysis, levels=c("IEE","FE","EME","NEME","IEEw","FEw","EMEw","NEMEw")),
# analysis = factor(analysis, levels=c("IEE","IEEw","FE","FEw","EME","EMEw","NEME","NEMEw")),
varianceestimator = factor(varianceestimator, levels=c("Model","Jackknife")),
estimand = factor(estimand, levels=c("pATE","cATE"))
) %>%
# plot
# ggplot(., aes(x=varianceestimator, y=value, fill=analysis)) +
ggplot(., aes(x=analysis, y=value, fill=varianceestimator, color=varianceestimator)) +
geom_bar(position="dodge", stat = "identity") +
facet_grid(estimand~weighted, scales="free_x") +
# geom_hline(data = data.frame(result = c("CP", "Power"), hline = c(0.95, NA)), aes(yintercept = hline), linetype = "dashed") +
geom_hline(yintercept = 0.95, linetype="dashed") +
scale_fill_manual(values=c("gray","gray2")) +
scale_color_manual(values=c("black","black")) +
# scale_fill_manual(values = rep(c("green4", "blue4", "purple3", "red2"), each=2) ) +
labs(y="Coverage Probability", x=NULL, title = "Coverage Probability", fill="Variance Estimator", color="Variance Estimator") +
theme_bw() +
theme(legend.position = "bottom")
# width: 500, height: 400
ggsave(filename = paste0(getwd(),"/Submission 1/Figures/Kenneth_Menglin_Lee_Figure_8.tiff"), plot = last_plot(),
width=5, height=4, units="in",
dpi=800, device='tiff')
# https://www.sciencedirect.com/science/article/pii/S2352827322003093#da0010
# import cleaned up jiah dataset (cleaned by running the accompanying do file in Stata and exporting the data as .csv)
jiah <- read.csv("jiah_trial_dataset_cleaned.csv")
# big ass dataset
# identify
# cluster
jiah$idclus %>% table()
# period
jiah$baseline %>% table()
jiah$endline %>% table()
# cluster period
table(jiah$idclus, jiah$endline)
# treatment
jiah$treatment %>% table()
jiah$treatment <- factor(jiah$treatment)
table(jiah[jiah$treatment==1,]$idclus, jiah[jiah$treatment==1,]$endline)
# outcome
# school attendance, dietary diversity, and mental health
# In intervention vs control clusters, mean dietary diversity score was 4·0 (SD 1·5) vs 3·6 (SD 1·2) (adjDiff 0·34; 95%CI -0·23, 0·93, p = 0·242); mean Brief Problem Monitor-Youth (mental health) score was 12·5 (SD 6·0) vs 11·9 (SD 5·9) (adjDiff 0·02, 95%CI -0·06, 0·13, p = 0·610); and school enrolment rates were 70% vs 63% (adjOR 1·39, 95%CI 0·89, 2·16, p = 0·142)
jiah$alcohol_ever # binary
jiah$mentalhealth # continuous
jiah$diet_score # count
lm(mentalhealth ~ treatment + endline, data = jiah)
lm(mentalhealth ~ treatment + endline + idclus, data = jiah)
library(dplyr)
table(jiah$idclus, jiah$endline)
# remove clusters with missing data from a period
jiah.complete <- jiah %>% filter(!idclus %in% c(1, 4, 12, 21, 22, 25, 26, 31, 34, 37))
table(jiah.complete$idclus, jiah.complete$endline)
table(jiah.complete[jiah.complete$treatment==1,]$idclus, jiah.complete[jiah.complete$treatment==1,]$endline)
length(unique(jiah.complete$idclus)) # 28 total clusters
length(table(jiah.complete[jiah.complete$treatment==1,]$idclus, jiah.complete[jiah.complete$treatment==1,]$endline)) # 14 clusters w/ trtmnt
length(table(jiah.complete$idclus)) # 28 clusters
# get cluster means & use that as the weight...
cellmeansize <- as.data.frame(rowMeans(table(jiah.complete$idclus, jiah.complete$endline)))
colnames(cellmeansize) <- "mean_Freq"
cellmeansize$idclus <- rownames(cellmeansize)
cellmeansize
# get cluster:period size
cellsize <- as.data.frame(table(jiah.complete$idclus, jiah.complete$endline))
colnames(cellsize) <- c("idclus", "endline", "Freq")
cellsize
# # get cp2 size
cellsize2 <- cellsize %>% filter(endline==1) %>% select(-endline)
colnames(cellsize2) <- c("idclus", "Freq2")
# merge both into Haines_pb.df
jiah.complete <- merge(jiah.complete, cellmeansize, by="idclus")
jiah.complete <- merge(jiah.complete, cellsize, by=c("idclus","endline"))
jiah.complete <- merge(jiah.complete, cellsize2, by=c("idclus"))
jiah.complete$W1 <- 1/jiah.complete$Freq
# jiah.complete$mean_W1 <- 1/jiah.complete$mean_Freq
# jiah.complete$W2 <- 1/jiah.complete$Freq2
# jiah saves dataset
jiahsaves <- data.frame(
analysis = c("IEE","FE","EME","NEME", "IEEw", "FEw"),
est = c(
summary(lm(mentalhealth ~ treatment + endline, data = jiah.complete))$coef["treatment1","Estimate"],
summary(lm(mentalhealth ~ treatment + endline + idclus, data = jiah.complete))$coef["treatment1","Estimate"],
summary(lme4::lmer(mentalhealth ~ treatment + endline + (1|idclus), data=jiah.complete))$coef["treatment1","Estimate"],
summary(lme4::lmer(mentalhealth ~ treatment + endline + (1|idclus) + (1|idclus:endline), data=jiah.complete))$coef["treatment1","Estimate"],
summary(lm(mentalhealth ~ treatment + endline, data = jiah.complete, weights = jiah.complete$W1))$coef["treatment1","Estimate"],
summary(lm(mentalhealth ~ treatment + endline + idclus, data = jiah.complete, weights = jiah.complete$W1))$coef["treatment1","Estimate"]
), # correct, checked
SE_mod = c(
summary(lm(mentalhealth ~ treatment + endline, data = jiah.complete))$coef["treatment1","Std. Error"],
summary(lm(mentalhealth ~ treatment + endline + idclus, data = jiah.complete))$coef["treatment1","Std. Error"],
summary(lme4::lmer(mentalhealth ~ treatment + endline + (1|idclus), data=jiah.complete))$coef["treatment1","Std. Error"],
summary(lme4::lmer(mentalhealth ~ treatment + endline + (1|idclus) + (1|idclus:endline), data=jiah.complete))$coef["treatment1","Std. Error"],
summary(lm(mentalhealth ~ treatment + endline, data = jiah.complete, weights = jiah.complete$W1))$coef["treatment1","Std. Error"],
summary(lm(mentalhealth ~ treatment + endline + idclus, data = jiah.complete, weights = jiah.complete$W1))$coef["treatment1","Std. Error"]
) # correct, checked
)
# jackknife
saves_jk <- c("cluster_i", "IEE", "IEEw", "FE", "FEw", "EME", "NEME")
jk.df <- data.frame(matrix(ncol=length(saves_jk), nrow=0))
names(jk.df) <- saves_jk
jk.df
for(i in unique(jiah.complete$idclus)){
jk.dat <- jiah.complete %>% filter(idclus!=i)
# jk.estimates <- c(jk.estimates,
#                   summary(lme4::lmer(outcome ~ intervention + time-1 + (1|cluster), data = jk.dat)
#                   )$coef[,"Estimate"]["intervention"]
# )
jk.df <- jk.df %>%
add_row(
cluster_i=as.numeric(i),
IEE = summary(lm(mentalhealth ~ treatment + endline, data = jk.dat))$coef["treatment1","Estimate"],
IEEw = summary(lm(mentalhealth ~ treatment + endline, data = jk.dat, weights = jk.dat$W1))$coef["treatment1","Estimate"],
FE = summary(lm(mentalhealth ~ treatment + endline + idclus, data = jk.dat))$coef["treatment1","Estimate"],
FEw = summary(lm(mentalhealth ~ treatment + endline + idclus, data = jk.dat, weights = jk.dat$W1))$coef["treatment1","Estimate"],
EME = summary(lme4::lmer(mentalhealth ~ treatment + endline + (1|idclus), data=jk.dat))$coef["treatment1","Estimate"],
NEME =  summary(lme4::lmer(mentalhealth ~ treatment + endline + (1|idclus) + (1|idclus:endline), data=jk.dat))$coef["treatment1","Estimate"]
)
print(nrow(jk.df))
}
jk.df
jiahsaves$analysis
jiahsaves$SE_jk <- c(
sqrt(sum((jk.df$IEE-filter(jiahsaves,analysis=="IEE")$est)^2)*(nrow(jk.df)-1)/(nrow(jk.df))),
sqrt(sum((jk.df$FE-filter(jiahsaves,analysis=="FE")$est)^2)*(nrow(jk.df)-1)/(nrow(jk.df))),
sqrt(sum((jk.df$EME-filter(jiahsaves,analysis=="EME")$est)^2)*(nrow(jk.df)-1)/(nrow(jk.df))),
sqrt(sum((jk.df$NEME-filter(jiahsaves,analysis=="NEME")$est)^2)*(nrow(jk.df)-1)/(nrow(jk.df))),
sqrt(sum((jk.df$IEEw-filter(jiahsaves,analysis=="IEEw")$est)^2)*(nrow(jk.df)-1)/(nrow(jk.df))),
sqrt(sum((jk.df$FEw-filter(jiahsaves,analysis=="FEw")$est)^2)*(nrow(jk.df)-1)/(nrow(jk.df)))
) # correct, checked
jiahsaves
# create 95% CI
jiahsaves
jiahsaves$mod_95_H <- jiahsaves$est + 1.96*jiahsaves$SE_mod
jiahsaves$mod_95_L <- jiahsaves$est - 1.96*jiahsaves$SE_mod
jiahsaves$jk_95_H <- jiahsaves$est + 1.96*jiahsaves$SE_jk
jiahsaves$jk_95_L <- jiahsaves$est - 1.96*jiahsaves$SE_jk
jiahsaves
rbind(
jiahsaves %>% dplyr::select(analysis, est, CI_95_H=mod_95_H, CI_95_L=mod_95_L) %>% mutate(varianceestimator="Model"),
jiahsaves %>% dplyr::select(analysis, est, CI_95_H=jk_95_H, CI_95_L=jk_95_L) %>% mutate(varianceestimator="Jackknife")
) %>%
# create levels for variance estimator
mutate(varianceestimator = factor(varianceestimator, levels=c("Model","Jackknife"))) %>%
# create levels for analysis variables
mutate(analysis = factor(analysis, levels=c("IEE","FE","EME","NEME","IEEw","FEw"))) %>%
# create variable for weighted and unweighted analayses
mutate(weighted = ifelse(grepl("w",analysis),"Weighted","Unweighted")) %>%
ggplot(., aes(x=analysis, y=est, group=varianceestimator, color=varianceestimator)) +
geom_point(position=position_dodge(width=0.4)) +
geom_errorbar(aes(ymin=CI_95_L, ymax=CI_95_H), width=.2,
position=position_dodge(0.4)) +
facet_grid(~weighted, scales="free") +
ylim(-0.1,0.25) +
geom_hline(yintercept=0, linetype="dashed") +
labs(y=NULL, x=NULL, title = "Re-analysis of JIAH trial", subtitle="Effect of community youth teams on mental health scores", color="95% CI variance estimator") +
theme_bw() +
theme(legend.position = "bottom")
# width: 500, height: 350
# # unweighted analyses
# lm(mentalhealth ~ treatment + endline, data = jiah.complete) # 0.01776
# lm(mentalhealth ~ treatment + endline + idclus, data = jiah.complete) # 0.0190515
# lme4::lmer(mentalhealth ~ treatment + endline + (1|idclus), data=jiah.complete) # 0.04703 # why's this so different, maybe there's something else at play, confounding or something?
# lme4::lmer(mentalhealth ~ treatment + endline + (1|idclus) + (1|idclus:endline), data=jiah.complete) # 0.02876
#
# # weighted analyses
# # IEEw
# lm(mentalhealth ~ treatment + endline, data = jiah.complete, weights = jiah.complete$W1) # 0.01876
# # lm(mentalhealth ~ treatment + endline, data = jiah.complete, weights = jiah.complete$mean_W1) # 0.01322
# # lm(mentalhealth ~ treatment + endline, data = jiah.complete, weights = jiah.complete$W2) # 0.01876 -> consistent with cATE
# # FEw
# lm(mentalhealth ~ treatment + endline + idclus, data = jiah.complete, weights = jiah.complete$W1) # 0.0197017
# # lm(mentalhealth ~ treatment + endline + idclus, data = jiah.complete, weights = jiah.complete$mean_W1) # 0.0137342
# # lm(mentalhealth ~ treatment + endline + idclus, data = jiah.complete, weights = jiah.complete$W2) # 0.025201 -> not consistent w/ cATE
# # the fact that using W2 isn't the same as W1 probably indicates the ratio isn't independent...
#
# # # EMEw
# # WeMix::mix(mentalhealth ~ treatment + endline + (1|idclus), data=jiah.complete, weights=c("mean_W1", "mean_W1")) # 0.05582461
# # WeMix::mix(mentalhealth ~ treatment + endline + (1|idclus), data=jiah.complete, weights=c("W2", "W2")) # 0.03897842
# # # NEMEw
# # WeMix::mix(mentalhealth ~ treatment + endline + (1|idclus) + (1|idclus:endline), data=jiah.complete, weights=c("mean_W1", "mean_W1", "mean_W1")) # 0.03437274
# # WeMix::mix(mentalhealth ~ treatment + endline + (1|idclus) + (1|idclus:endline), data=jiah.complete, weights=c("W2", "W2", "W2")) # 0.07484232
# # # Why's the resulting analysis value so high?
#
# # IEE & FE give similar results to IEEw and FEw, which sort of implies to me that there isn't any informative cluster size?
# # I think it makes a lot of sense to analyze with a cp weight, mean_cluster weight is "theoretically consistent" whereas mean_cluster is probably empirically unbiased...?
#
# # anyway...unequal cluster sizes...idk...
# width: 500, height: 350
ggsave(filename = paste0(getwd(),"/Submission 1/Figures/Kenneth_Menglin_Lee_Figure_10.tiff"), plot = last_plot(),
width=5, height=3.5, units="in",
dpi=800, device='tiff')
# [For manuscript]
EMEw_data %>%
filter(SizeRatio %in% c(0.1, 0.2, 0.5)) %>%
filter(P1 == 0.5) %>%
ggplot(aes(x=ICC, y=value, group=weight)) +
geom_line(aes(color=weight)) +
facet_grid(. ~ SizeRatio) +
scale_color_manual(labels = c(TeX("$u=1$"), TeX("$u=2$")), values=c("#00BFC4","#F8766D")) +
labs(title="EMEw weights", y=TeX("$\\lambda_{EMEw,u}$"), color=NULL) +
# scale_y_continuous(sec.axis = sec_axis(~ . , name = TeX("$P(s=1) =$"), breaks = NULL, labels = NULL, ), limits=c(0,2)) +
scale_y_continuous(limits=c(0,2)) +
scale_x_continuous(sec.axis = sec_axis(~ . , name = TeX("$\\zeta =$"), breaks = NULL, labels = NULL)) +
theme_bw() +
# geom_vline(xintercept = 0.02, linetype="dashed", color="gray45") + # where maximum ICC is
theme(legend.position = "bottom", axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# width: 500, height: 400
ggsave(filename = paste0(getwd(),"/Submission 1/Figures/Kenneth_Menglin_Lee_Figure_2.tiff"), plot = last_plot(),
width=5, height=3.5, units="in",
dpi=800, device='tiff')
# [for manuscript]
NEMEw_data %>%
filter(P1 == 0.5) %>%
ggplot(aes(x=wpICC, y=value, group=weight)) +
geom_line(aes(color=weight)) +
facet_grid(. ~ SizeRatio) +
scale_color_manual(labels = c(TeX("$u=1$"), TeX("$u=2$")), values=c("#00BFC4","#F8766D")) +
labs(title="NEMEw weights (CAC=0.8)", y=TeX("$\\lambda_{NEMEw,u}$"), x="within-period ICC", color=NULL) +
# scale_y_continuous(sec.axis = sec_axis(~ . , name = TeX("$P(s=1) =$"), breaks = NULL, labels = NULL), limits=c(0,2)) +
scale_x_continuous(sec.axis = sec_axis(~ . , name = TeX("$\\zeta =$"), breaks = NULL, labels = NULL)) +
theme_bw() +
# geom_vline(xintercept = 0.02, linetype="dashed", color="gray45") + # where maximum ICC is
theme(legend.position = "bottom", axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# width: 500, height: 350
ggsave(filename = paste0(getwd(),"/Submission 1/Figures/Kenneth_Menglin_Lee_Figure_3.tiff"), plot = last_plot(),
width=5, height=3.5, units="in",
dpi=800, device='tiff')
# [for manuscript]
NEMEw_data %>%
filter(P1 == 0.5) %>%
ggplot(aes(x=wpICC, y=value, group=weight)) +
geom_line(aes(color=weight)) +
facet_grid(. ~ SizeRatio) +
scale_color_manual(labels = c(TeX("$u=1$"), TeX("$u=2$")), values=c("#00BFC4","#F8766D")) +
labs(title="NEMEw weights (CAC=0.8)", y=TeX("$\\lambda_{NEMEw,u}$"), x="within-period ICC", color=NULL) +
# scale_y_continuous(sec.axis = sec_axis(~ . , name = TeX("$P(s=1) =$"), breaks = NULL, labels = NULL), limits=c(0,2)) +
scale_x_continuous(sec.axis = sec_axis(~ . , name = TeX("$\\zeta =$"), breaks = NULL, labels = NULL)) +
theme_bw() +
# geom_vline(xintercept = 0.02, linetype="dashed", color="gray45") + # where maximum ICC is
theme(legend.position = "bottom", axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
library(dplyr)
library(ggplot2)
library(latex2exp)
# [for manuscript]
NEMEw_data %>%
filter(P1 == 0.5) %>%
ggplot(aes(x=wpICC, y=value, group=weight)) +
geom_line(aes(color=weight)) +
facet_grid(. ~ SizeRatio) +
scale_color_manual(labels = c(TeX("$u=1$"), TeX("$u=2$")), values=c("#00BFC4","#F8766D")) +
labs(title="NEMEw weights (CAC=0.8)", y=TeX("$\\lambda_{NEMEw,u}$"), x="within-period ICC", color=NULL) +
# scale_y_continuous(sec.axis = sec_axis(~ . , name = TeX("$P(s=1) =$"), breaks = NULL, labels = NULL), limits=c(0,2)) +
scale_x_continuous(sec.axis = sec_axis(~ . , name = TeX("$\\zeta =$"), breaks = NULL, labels = NULL)) +
theme_bw() +
# geom_vline(xintercept = 0.02, linetype="dashed", color="gray45") + # where maximum ICC is
theme(legend.position = "bottom", axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
NEMEw_weight <- function(K1, K2, wprho, bprho, P1, Return){
w1 <- (1 + (K1-1)*wprho)/((1 + (2*K1-1)*wprho)^2 - (K1*bprho)^2)
w2 <- (1 + (K2-1)*wprho)/((1 + (2*K2-1)*wprho)^2 - (K2*bprho)^2)
Ew <- P1*w1 + (1-P1)*w2
if(Return=="w1"){
return(w1)
}else if(Return=="w2"){
return(w2)
}else if (Return=="all"){
return(c(w1, w2, Ew))
}else if(Return=="fractions"){
return(c(w1/Ew, w2/Ew))
}
}
# our simulation parameters
NEMEw_weight(K1=20, K2=100, wprho=0.06, bprho=0.05, P1=0.5, Return="fractions")
# Change P1: gives more weight to K2
NEMEw_weight(K1=20, K2=100, wprho=0.06, bprho=0.05, P1=0.1, Return="fractions")
# Change K1: Differences between w1 and w2 are pretty big
NEMEw_weight(K1=10, K2=100, wprho=0.06, bprho=0.05, P1=0.5, Return="fractions")
# Change rho: Differences between w1 and w2 are larger for lower rho
NEMEw_weight(K1=20, K2=100, wprho=0.02, bprho=0.01, P1=0.5, Return="fractions")
# generate NEMEw data
library(dplyr)
library(reshape2)
cac=0.8
saves <- c("SizeRatio", "wpICC", "CAC", "P1", "weight1", "weight2")
NEMEw_data <- data.frame(matrix(ncol=length(saves), nrow=0))
names(NEMEw_data) <- saves
for(k in c(10, 20, 50)){
for(r in seq(0, 1, by=0.01)){ # rho
for(p in c(0.5, 0.7, 0.9)){
NEMEw_data <- NEMEw_data %>%
add_row(
SizeRatio = k/100,
wpICC = r,
CAC = cac,
P1 = p,
weight1 = NEMEw_weight(K1=k, K2=100, wprho=r, bprho=r*cac, P1=p, Return="fractions")[1],
weight2 = NEMEw_weight(K1=k, K2=100, wprho=r, bprho=r*cac, P1=p, Return="fractions")[2]
)
}
}
}
# melt the data
NEMEw_data <- melt(NEMEw_data, id.vars = c("SizeRatio", "wpICC", "CAC", "P1"))
# rename the melted data
colnames(NEMEw_data) <- c("SizeRatio", "wpICC", "CAC", "P1", "weight", "value")
# check the data
head(NEMEw_data)
# graph NEMEw data
library(ggplot2)
library(latex2exp)
# [for manuscript]
NEMEw_data %>%
filter(P1 == 0.5) %>%
ggplot(aes(x=wpICC, y=value, group=weight)) +
geom_line(aes(color=weight)) +
facet_grid(. ~ SizeRatio) +
scale_color_manual(labels = c(TeX("$u=1$"), TeX("$u=2$")), values=c("#00BFC4","#F8766D")) +
labs(title="NEMEw weights (CAC=0.8)", y=TeX("$\\lambda_{NEMEw,u}$"), x="within-period ICC", color=NULL) +
# scale_y_continuous(sec.axis = sec_axis(~ . , name = TeX("$P(s=1) =$"), breaks = NULL, labels = NULL), limits=c(0,2)) +
scale_x_continuous(sec.axis = sec_axis(~ . , name = TeX("$\\zeta =$"), breaks = NULL, labels = NULL)) +
theme_bw() +
# geom_vline(xintercept = 0.02, linetype="dashed", color="gray45") + # where maximum ICC is
theme(legend.position = "bottom", axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# [for manuscript]
NEMEw_data %>%
filter(P1 == 0.5) %>%
ggplot(aes(x=wpICC, y=value, group=weight)) +
geom_line(aes(color=weight)) +
facet_grid(. ~ SizeRatio) +
scale_color_manual(labels = c(TeX("$u=1$"), TeX("$u=2$")), values=c("#00BFC4","#F8766D")) +
labs(title="NEMEw weights (CAC=0.8)", y=TeX("$\\lambda_{NEMEw,u}$"), x="within-period ICC", color=NULL) +
# scale_y_continuous(sec.axis = sec_axis(~ . , name = TeX("$P(s=1) =$"), breaks = NULL, labels = NULL), limits=c(0,2)) +
scale_y_continuous(limits=c(0,2)) +
scale_x_continuous(sec.axis = sec_axis(~ . , name = TeX("$\\zeta =$"), breaks = NULL, labels = NULL)) +
theme_bw() +
# geom_vline(xintercept = 0.02, linetype="dashed", color="gray45") + # where maximum ICC is
theme(legend.position = "bottom", axis.text.x = element_text(angle = 270, vjust = 0.5, hjust=1))
# width: 500, height: 350
ggsave(filename = paste0(getwd(),"/Submission 1/Figures/Kenneth_Menglin_Lee_Figure_3.tiff"), plot = last_plot(),
width=5, height=3.5, units="in",
dpi=800, device='tiff')
